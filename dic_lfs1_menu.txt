いわゆるメニュー





＊mが押された
＞メニュー

＊tが押された
＞OnTalk

＊0つつかれ
＞OnTalk

＊0headつつかれ
＞メニュー
＊0handつつかれ
＞メニュー

＊1つつかれ
＞らぼメニュー





＊メニュー	（メニューサイズ）!=4
＄ユーザ入力中	
：\c\_q（入力箱を閉じる）（メニューサイズ制御A）φ
（when、（変数「r_talk」の存在）==1、◆\q[直前のトーク,直前のトークは]、（when、（Sender）==SSP、\f[strike,◆直前のトーク]、◆直前のトーク　　無し））（メニューサイズ制御B）
◆\q[ユーザ設定,ユーザ設定開く]（メニューサイズ制御B）
◆喋り分野　　　　（メニューサイズ制御C）\q[喋り分野設定,喋り分野設定]（メニューサイズ制御B）
◆喋り頻度　　　　（メニューサイズ制御C）\q[（喋り間隔）,喋り間隔入力]（メニューサイズ制御B）
◆強調文字色　　　（メニューサイズ制御C）（call，色メカ，\_a[文字色設定,強調色]現在の色\_a，強調色，a）（メニューサイズ制御B）
◆選択肢トーク　　（メニューサイズ制御C）\q[（when,（選択肢つきトーク可否）==1,出現,停止）,選択肢つきトーク可否設定]（メニューサイズ制御B）
◆設定画面サイズ　（メニューサイズ制御C）\q[（nswitch,（メニューサイズ）,横長,縦長,大きい,小さい）,メニューサイズ変更]（メニューサイズ制御B）
\q[〔閉〕,（とじるよ）]\_q

＊メニュー	（メニューサイズ）==4
＄ユーザ入力中	
：\c\_q（入力箱を閉じる）φ
（when、（変数「r_talk」の存在）==1、◆\q[直前喋,直前のトークは]、（when、（Sender）==SSP、\f[strike,◆直前喋]、））
◆ユーザ \q[設定,ユーザ設定開く]　φ
◆喋分野 \q[設定,喋り分野設定]　φ
◆喋頻度 \q[（喋り間隔）,喋り間隔入力]　φ
◆強調色 （call，色メカ，\_a[文字色設定,強調色]設定\_a，強調色，a）　φ
◆選択肢 \q[（when,（選択肢つきトーク可否）==1,出現,停止）,選択肢つきトーク可否設定]　φ
◆大きさ \q[（nswitch,（メニューサイズ）,横長,縦長,大きい,小さい）,メニューサイズ変更]　φ
\q[〔閉〕,（とじるよ）]\_q





＊直前のトークは
（r_talk）





＊選択肢つきトーク可否設定
＄選択肢つきトーク可否	（nswitch,（選択肢つきトーク可否）,2,1）
＞メニュー





＊メニューサイズ変更
＄メニューサイズ	（nswitch,（メニューサイズ）,2,3,4,1）
＞メニュー
＃1.横長 2.縦長 3.大きい 4.小さい

＠メニューサイズ制御A
（nswitch,（メニューサイズ）,,,\b[2],）

＠メニューサイズ制御B
（nswitch,（メニューサイズ）,,,\n[half],）

＠メニューサイズ制御C
（nswitch,（メニューサイズ）,,\n,,）

＠メニューサイズ制御D
（nswitch,（メニューサイズ）,　　　　　　,,　　　　　　,）

＠メニューサイズ制御E
（nswitch,（メニューサイズ）,,\n[half],\n[half],）





＊ユーザ設定開く
＞ユーザ設定開くSSP	（Sender）==SSP
＞ユーザ設定開くSSP以外

＊ユーザ設定開くSSP
\![open,configurationdialog,setup]

＊ユーザ設定開くSSP以外
：（入力箱を閉じる）\c\_q（メニューサイズ制御A）φ
◆呼び名　　（メニューサイズ制御C）\q[（ユーザ名）,ユーザ名入力]（メニューサイズ制御B）
◆生年月日　（メニューサイズ制御C）\q[（ユーザ誕生年）/（ユーザ誕生月）/（ユーザ誕生日）,ユーザ生年月日入力]（メニューサイズ制御B）
◆性別　　　（メニューサイズ制御C）（ユーザ性別選択肢）

\q[〔戻〕,メニュー]　\q[〔閉〕,（とじるよ）]



＊ユーザ名入力
＄ユーザ入力中	1
＄前のユーザ名	（ユーザ名）
：\_q\![open,inputbox,ユーザ名,-1,（ユーザ名）]敬称込みで設定してくださいφ。
特殊文字や記号は削除される場合がありますφ。\_q\x（入力箱を閉じる）\![raise,ユーザ設定開くSSP以外]

＊ユーザ名を教えてもらった
＄ユーザ入力中	
＞ユーザ設定開くSSP以外

＊ユーザ名をキャンセルされた
＄ユーザ入力中	
＄ユーザ名	（前のユーザ名）
：\_qユーザ名の入力がキャンセルされましたφ。\_q\x\![raise,ユーザ設定開くSSP以外]



＊ユーザ生年月日入力
＄ユーザ入力中	1
：\_q入力形式はYYYYMMDDφ。
1900年1月1日ならφ、「19000101」ですφ。\![open,inputbox,ユーザ生年月日,-1,（sprintf,%04d%02d%02d,（ユーザ誕生年）,（ユーザ誕生月）,（ユーザ誕生日））]\_q\x（入力箱を閉じる）\![raise,ユーザ設定開くSSP以外]
＃ここに来るのは本体がSSP以外の時なので、\![open,timeinput,～]は使えない

＊ユーザ生年月日を教えてもらった
＄ユーザ入力中	
＞ユーザ生年月日入力	（is_digit,（ユーザ生年月日）,整数）!=1
＞ユーザ生年月日入力	（length,（ユーザ生年月日））!=8
＄_UB_YEAR	（substr,（ユーザ生年月日）,0,4）
＄_UB_MONTH	（substr,（ユーザ生年月日）,4,2）
＄_UB_DAY	（substr,（ユーザ生年月日）,6,2）
＞ユーザ生年月日入力	（whenlist,（_UB_MONTH）,<=0,1,>12,1,0）
＞ユーザ生年月日入力	（nswitch,（_UB_MONTH）,1,（whenlist,（_UB_DAY）,==0,1,>31,1,0）2,（whenlist,（_UB_DAY）,==0,1,>29,1,0）3,（whenlist,（_UB_DAY）,==0,1,>31,1,0）4,（whenlist,（_UB_DAY）,==0,1,>30,1,0）5,（whenlist,（_UB_DAY）,==0,1,>31,1,0）6,（whenlist,（_UB_DAY）,==0,1,>30,1,0）7,（whenlist,（_UB_DAY）,==0,1,>31,1,0）8,（whenlist,（_UB_DAY）,==0,1,>31,1,0）9,（whenlist,（_UB_DAY）,==0,1,>30,1,0）10,（whenlist,（_UB_DAY）,==0,1,>31,1,0）11,（whenlist,（_UB_DAY）,==0,1,>30,1,0）12,（whenlist,（_UB_DAY）,==0,1,>31,1,0））==1
＄ユーザ誕生年	（_UB_YEAR）
＄ユーザ誕生月	（_UB_MONTH）
＄ユーザ誕生日	（_UB_DAY）
＄_UB_YEAR	
＄_UB_MONTH	
＄_UB_DAY	
＞ユーザ設定開くSSP以外
＃うるう年は判定していない

＊ユーザ生年月日をキャンセルされた
＄ユーザ入力中	
：\_q生年月日の入力がキャンセルされましたφ。\_q\x\![raise,ユーザ設定開くSSP以外]



＠ユーザ性別選択肢
（whenlist、（ユーザ性別）==
、男性、\_u[0x2611]男性　\q[□女性,Onユーザ性別選択,女性]　\q[□未定義,Onユーザ性別選択,未定義]
、女性、\q[□男性,Onユーザ性別選択,男性]　\_u[0x2611]女性　\q[□未定義,Onユーザ性別選択,未定義]
、未定義、\q[□男性,Onユーザ性別選択,男性]　\q[□女性,Onユーザ性別選択,女性]　\_u[0x2611]未定義）
＃\_u[0x2610] -> OFF
＃\_u[0x2611] -> ON

＊Onユーザ性別選択
＄ユーザ性別	（Ｒ０）
＞ユーザ設定開くSSP以外





＊喋り間隔入力	（Sender）==SSP
＄ユーザ入力中	1
＄前の喋り間隔	（喋り間隔）
：\_q\![open,slideinput,喋り間隔,-1,（zen2han,（calc,（erase,（喋り間隔）,秒）/10））,10,600]喋り間隔を設定しますφ。
φ（１０～６００秒φ）\_q\x（入力箱を閉じる）\![raise,メニュー]

＊喋り間隔入力	（Sender）!=SSP
＄ユーザ入力中	1
＄前の喋り間隔	（喋り間隔）
：\_q\![open,inputbox,喋り間隔,-1,（zen2han,（erase,（喋り間隔）,秒））]喋り間隔を設定しますφ。
φ（数字で入力してくださいφ）\_q\x（入力箱を閉じる）\![raise,メニュー]
＃ここに来るのは本体がSSP以外の時なので、\![open,slideinput,～]は使えない

＊喋り間隔を教えてもらった
＄ユーザ入力中	
＞沈黙	（喋り間隔）==0
＞喋り間隔入力エラー	（is_digit,（喋り間隔）,整数）==0
＞喋り間隔入力エラー短すぎ	（喋り間隔）<10
＄喋り間隔	（calc,（喋り間隔）*10）秒
：\_q（喋り間隔）ごとに喋ります。\_q\x\![raise,メニュー]

＊沈黙
＄喋り間隔	0秒
：\_q自発的に喋りませんφ。\_q\x\![raise,メニュー]

＊喋り間隔をキャンセルされた
＄ユーザ入力中	
＄喋り間隔	（前の喋り間隔）
：\_q喋り間隔の設定がキャンセルされましたφ。\_q\x\![raise,メニュー]

＊喋り間隔入力エラー
：\_q数字以外の入力ですφ。\_q\x
＞喋り間隔入力

＊喋り間隔入力エラー短すぎ
：\_q10秒より短い設定にはできませんφ。\_q\x
＞喋り間隔入力





＊文字色設定
＄ユーザ入力中	1
＄今回の文字色設定	（Ｒ２）
\![open,dialog,color,--color=（（Ｒ２）字R） （（Ｒ２）字G） （（Ｒ２）字B）,--id=TextColor]φ
：\_q（call，色メカ，変更前はこの色ですφ。，（Ｒ２））\_q\x（入力箱を閉じる）\![raise,メニュー]

＊OnTextColor
＄ユーザ入力中	
＄（今回の文字色設定）字R	（split、（Ｒ２）、,）
＄（今回の文字色設定）字R	（Ｓ０）
＄（今回の文字色設定）字G	（Ｓ１）
＄（今回の文字色設定）字B	（Ｓ２）
＄今回の文字色設定	
＞メニュー

＊OnTextColorCancel
＄ユーザ入力中	
＞メニュー





＊喋り分野設定
＄_c	0
＄喋れる分野の数	（times，（単語群「喋り分野リスト」の数），（set,_j,（喋り分野リスト））（set,_c,（calc,（_c）+（喋り分野設定_（_j）））））
＄喋れる分野の数	（_c）
＄_c	
＄_j	
＞喋り分野設定ゼロ個なので何か設定するまで抜けられない	（喋れる分野の数）==0
：\_q（喋り分野設定選択肢）
\q[〔戻〕,メニュー]　\q[〔閉〕,（とじるよ）]\_q

＊喋り分野設定ゼロ個なので何か設定するまで抜けられない
：\_q（喋り分野設定選択肢）
何か一つは設定してくださいφ。\_q

＠喋り分野設定選択肢
（times，（単語群「喋り分野リスト」の数）
，（set,_j,（喋り分野リスト））φ
（when、（Sender）==SSP、\__q[OnTalkGenreSet,（_j）]（when、（喋り分野設定_（_j））==1、\_u[0x2611]、\_u[0x2610]）（_j）\__q
、\q[（when、（喋り分野設定_（_j））==1、レ、□）（_j）,OnTalkGenreSet,（_j）]φ
）\n）φ
（set,_j,）

＊OnTalkGenreSet
＄喋り分野設定_（Ｒ０）	（switch,（喋り分野設定_（Ｒ０））,0,1,1,0）
＞喋り分野設定

＠喋り分野リスト
選択肢について
唐揚げはおいしいですね
おにくうきうき
＃区切り字不可
